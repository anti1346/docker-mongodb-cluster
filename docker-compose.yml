version: '3.9'
services:

  mongo1:
    image: mongo:4.4.6
    restart: always
    container_name: mongo1
    hostname: mongo1
    command: ["mongod", "--replSet", "replica-set", "--bind_ip_all"]
    volumes:
      - ./docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./mongo-data/mongo1/db:/data/db
      - ./mongo-data/mongo1/log:/var/log/mongodb
    ports:
      - 30001:27017
    healthcheck:
      test: ["CMD", "mongo", "--host", "mongo1", "--port", "27017", "--eval", 'rs.initiate({_id : "rs0", members: [{ _id: 0, host: "mongo1:27017" },{ _id: 1, host: "mongo2:27017" },{ _id: 2, host: "mongo3:27017" } ]})']
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  mongo2:
    image: mongo:4.4.6
    restart: always
    container_name: mongo2
    hostname: mongo2
    command: ["mongod", "--replSet", "replica-set", "--bind_ip_all"]
    volumes:
      - ./docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./mongo-data/mongo2/db:/data/db
      - ./mongo-data/mongo2/log:/var/log/mongodb
    depends_on:
      - mongo1
    ports:
      - 30002:27017
  
  mongo3:
    image: mongo:4.4.6
    restart: always
    container_name: mongo3
    hostname: mongo3
    command: ["mongod", "--replSet", "replica-set", "--bind_ip_all"]
    volumes:
      - ./docker/mongodb/mongod.conf:/etc/mongod.conf
      - ./mongo-data/mongo3/db:/data/db
      - ./mongo-data/mongo3/log:/var/log/mongodb
    ports:
      - 30003:27017

networks:
  default:
    external:
      name: mongodb-net
